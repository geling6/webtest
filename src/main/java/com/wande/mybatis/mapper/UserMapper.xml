<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wande.mybatis.dao.UserMapper">

  <resultMap type="user" id="userResultMap">
  	<id property="id" column="id"/>
  	<result property="userName" column="user_name"/>
  	<result property="account" column="account"/>
  	<result property="password" column="password"/>
  	<result property="status" column="status"/>
  	<result property="email" column="email"/>
  	<result property="createTime" column="create_time"/>
  	<result property="updateTime" column="update_time"/>
  </resultMap>

  <select id="selectById" parameterType="int" resultMap="userResultMap">
    select * from user where id = #{id}
  </select>
  
  <resultMap type="hashmap" id="userMap">
  	<result property="key" column="id"/>
  	<result property="value" column="account"/>
  </resultMap>
  <select id="getIdByName" resultType="Integer">
    select id,account from user where user_name = #{userName}
  </select>
  
  <select id="selectMapById" parameterType="int" resultMap="userMap">
    select id,account from user where id = #{id}
  </select>
  
  <select id="selectMapByStatus" parameterType="int" resultType="hashmap">
    select id,account,user_name from user where status = #{status}
  </select>
  
  <insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
  	insert into user (id,account,user_name,password,email,status,create_time,update_time)
  	value(#{id},#{account},#{userName},#{password},#{email},#{status},#{createTime},#{updateTime})
  </insert>
  
  <update id="updateUsers" parameterType="java.util.List">
  	UPDATE user
		<trim prefix="set" suffix="" prefixOverrides="" suffixOverrides=",">
            <trim prefix="account = case" suffix="end,">
	            <foreach collection="users" item="i" index="index">
		            <if test="i.account != null">
		            	when id = #{i.id} then #{i.account}
		            </if>
	            </foreach>
            </trim>
            <trim prefix="password = case" suffix="end,">
	            <foreach collection="users" item="i" index="index">
		            <if test="i.password != null">
		            	when id=#{i.id} then #{i.password}
		            </if>
	            </foreach>
            </trim>
            <trim prefix="user_name = case" suffix="end,">
	            <foreach collection="users" item="i" index="index">
		            <if test="i.userName != null">
		            	when id=#{i.id} then #{i.userName}
		            </if>
	            </foreach>
            </trim>
            <trim prefix="email = case" suffix="end,">
	            <foreach collection="users" item="i" index="index">
		            <if test="i.email != null">
		            	when id=#{i.id} then #{i.email}
		            </if>
	            </foreach>
            </trim>
            <trim prefix="status = case" suffix="end,">
	            <foreach collection="users" item="i" index="index">
		            <if test="i.status != null">
		            	when id=#{i.id} then #{i.status}
		            </if>
	            </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
	            <foreach collection="users" item="i" index="index">
		            <if test="i.createTime != null">
		            	when id=#{i.id} then #{i.createTime}
		            </if>
	            </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
	            <foreach collection="users" item="i" index="index">
		            <if test="i.updateTime != null">
		            	when id=#{i.id} then #{i.updateTime}
		            </if>
	            </foreach>
            </trim>
		</trim>
		where
        <foreach collection="users" separator="or" item="i" index="index" >
        	id=#{i.id}
        </foreach>
  </update>
  
  <insert id="insertBatch" useGeneratedKeys="true" keyProperty="id">
  	insert into user (account,user_name,password,email,status,create_time,update_time)
  	value
  	<foreach collection ="list" item="item" index= "index" separator =",">
  		(#{item.account},#{item.userName},#{item.password},#{item.email},#{item.status},#{item.createTime},#{item.updateTime})
  	</foreach>
  </insert>
  
</mapper>